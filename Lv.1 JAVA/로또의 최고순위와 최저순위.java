// 주석은 모두 알고리즘이나 테스트케이스 TMI - JAVA
// 44/1/0/0/31/25 (민우꺼) -> 31, 1은 맞췄으니까 상관하지 않아도돼
// 31/10/45/1/6/19 (당첨번호)
/* 이 문제는 걍 지워진거 0만 보면 됨 여러가지 경우의 수 중에 틀린건 이미 경우의 수가 정해져
있어서 세지 X(예시 44,25)
모르는 거 0) 맞춘 거 제외한 10, 45, 6, 19를 보면
틀린거 44, 25에서 가장 가까운 수 정답의 45랑 19를 택해서 따로 빼고 나머지 수들의 경우의 수를
구하면됨
*/
/* 일단 써보는 알고리즘
1) 민우꺼에서 정답인거 뺀다
2) 민우꺼에서 0인 거 몇개인지 센다.
3) 이건 몰랐는데 하나하나 비교하는거 말고 카운트로 개수 빼는거더라고?
4) 최저 순위는 다맞은거에서 민우가 맞은 거 빼면 된다.
5) 최고 순위는 4번에서 2번 빼면 됨
6) 4,5번 answer에 리턴
*/
class Solution {

  public int[] solution(int[] lottos, int[] win_nums) {
    // 먼저 맞은 거 개수랑 0이 몇개 인지를 세야됨 빨리 빼주자
    int excellent = 0, zcnt = 0;
    for (int i = 0; i < lottos.length; i++) {
      //1) 민우꺼에서 맞은거 센다.
      for (int s = 0; s < win_nums.length; s++) {
        if (lottos[i] == win_nums[s]) {
          excellent++;
        }
      }
      //2) 민우꺼에서 0이 몇개인지 센다
      if (lottos[i] == 0) {
        zcnt++;
      }
    }
    //4) 최저순위부터 센다.
    int low = 7 - excellent;
    //테스트케이스 할때 틀린거-> 6보다 큰거 생각안함. 다맞았을 경우에도 넣어줌
    if (low > 6) {
      low = 6;
    }
    //5) 최고 순위는 4)에서 0 몇개인지 빼주기
    int high = low - zcnt;
    if (high < 1) {
      high = 1;
    }
    int[] answer = { high, low };
    return answer;
  }
}
